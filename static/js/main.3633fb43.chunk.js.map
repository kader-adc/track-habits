{"version":3,"sources":["components/habits.js","App.js","index.js"],"names":["Habits","JSON","parse","localStorage","getItem","useState","habits","setHabits","input","setInput","prgrs","setPrgrs","Checked","checked","setChecked","useEffect","setItem","stringify","count","map","hab","check","percentage","length","toPrecision","handleDelete","Id","newHabits","filter","habit","handleCheck","i","heck","newhabits","handleEdit","text","id","onSubmit","e","preventDefault","test","alert","Math","random","type","value","onChange","target","name","placeholder","required","max","onClick","className","onDoubleClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3633fb43.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './habits.css';\r\nimport { AiOutlineClose,AiOutlineEdit, AiOutlineCheck } from 'react-icons/ai';\r\n\r\n\r\nconst Habits =()=>{\r\n    // get data from local storage\r\n    const Habits = JSON.parse(localStorage.getItem('Habits')) || [];\r\n    const [habits, setHabits]=useState(Habits);\r\n   \r\n    const[input, setInput]=useState(' ')\r\n    const[prgrs, setPrgrs]=useState(0);\r\n    const Checked = JSON.parse(localStorage.getItem('Checked')) || 0;\r\n    const [checked, setChecked] = useState(Checked);\r\n\r\n    const handleChange=(e)=>{\r\n        setInput(e.target.value);\r\n    }\r\n    //handle submit\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (!input || !/\\S/.test(input)){\r\n            alert('Please enter your habit')\r\n        }\r\n        const habit={\r\n            Id: Math.random(),\r\n            text: input,\r\n            check:false\r\n        }\r\n        const newhabits = [habit, ...habits];\r\n        setHabits(newhabits); \r\n        // reset input field\r\n        setInput(' ');\r\n\r\n    }\r\n    \r\n    //store data in local storaage\r\n    useEffect(()=>{\r\n        localStorage.setItem('Habits',JSON.stringify(habits));\r\n        var count = 0;\r\n        habits.map((hab)=>{\r\n            if(hab.check){\r\n                count+=1;\r\n            }  \r\n            return(\r\n                count\r\n            )\r\n        })\r\n        setChecked(count)\r\n        localStorage.setItem('Checked', JSON.stringify(checked));\r\n        var percentage = (checked/habits.length * 100).toPrecision(3);\r\n        setPrgrs(percentage);\r\n    },[habits, checked])\r\n    //delete hobby\r\n    const handleDelete=(Id)=>{\r\n        const newHabits= [...habits].filter(habit=>habit.Id !== Id)\r\n        setHabits(newHabits);\r\n    }\r\n\r\n    // handle check\r\n    const handleCheck =(Id)=>{\r\n         for(var i=0;i<habits.length; i++){\r\n            if (habits[i].Id===Id){\r\n                const heck = habits[i].check;\r\n                habits[i].check = !heck;\r\n                const newhabits = [...habits];\r\n                setHabits(newhabits);\r\n            }\r\n        }\r\n        \r\n    }\r\n    //handle edit\r\n    const handleEdit=(Id)=>{\r\n        for(var i=0;i<habits.length; i++){\r\n            if (habits[i].Id===Id){\r\n               \r\n                setInput(habits[i].text);\r\n                handleDelete(Id)\r\n            }\r\n        } \r\n    }\r\n    // Reset hobbies state\r\n    const handleReset =()=>{\r\n        var newhabits = habits.map((hab) =>{ \r\n            hab.check=false\r\n            return(hab)\r\n        })\r\n            setHabits(newhabits);\r\n    }\r\n\r\n\r\n    return(\r\n      <div id= \"habit-table\">\r\n          <h2>Track your habits</h2>\r\n           <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={input} onChange={handleChange} name=\"habit\" placeholder='Add a habit...' required></input>\r\n                <button type=\"submit\">Add habit</button>\r\n            </form>\r\n            <form>            \r\n             <progress id=\"file\" max=\"100\" value={prgrs}> </progress>\r\n             <button type=\"reset\" onClick={handleReset} className=\"resetBtn\">Reset</button>        \r\n             </form>\r\n\r\n             <ul>\r\n                 {habits.map((hab)=>{\r\n                    if(hab.check){return(\r\n                        <li key={hab.Id} className=\"checkedHabit\" >\r\n                             {hab.text} <AiOutlineClose onClick={()=>handleDelete(hab.Id)} className=\"glyphicon glyphicon-remove\" /> <AiOutlineEdit onClick={()=>handleEdit(hab.Id)} className=\"AiOutlineEdit\"/> <AiOutlineCheck onClick={()=>handleCheck(hab.Id)} className=\"AiOutlineCheck\" />\r\n                         </li>)}else{return(\r\n                         <li key={hab.Id} onDoubleClick={()=>handleCheck(hab.Id)} >\r\n                             {hab.text}  <AiOutlineClose onClick={()=>handleDelete(hab.Id)} className=\"glyphicon glyphicon-remove\" /> <AiOutlineEdit onClick={()=>handleEdit(hab.Id)}  className=\"AiOutlineEdit\"/> <AiOutlineCheck onClick={()=>handleCheck(hab.Id)} className=\"AiOutlineCheck\"/>\r\n                        </li>\r\n                     )}\r\n                 })}   \r\n             </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Habits;\r\n","import './App.css';\nimport Habits from './components/habits';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Habits />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}